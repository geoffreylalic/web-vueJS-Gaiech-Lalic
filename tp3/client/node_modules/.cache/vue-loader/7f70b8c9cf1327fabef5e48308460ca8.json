{"remainingRequest":"/Users/wajdigaiech/Desktop/M1 MIAGE/TechnosWeb/tp3/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wajdigaiech/Desktop/M1 MIAGE/TechnosWeb/tp3/client/src/components/HelloWorld.vue?vue&type=style&index=0&id=469af010&scoped=true&lang=css&","dependencies":[{"path":"/Users/wajdigaiech/Desktop/M1 MIAGE/TechnosWeb/tp3/client/src/components/HelloWorld.vue","mtime":1632906033480},{"path":"/Users/wajdigaiech/Desktop/M1 MIAGE/TechnosWeb/tp3/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wajdigaiech/Desktop/M1 MIAGE/TechnosWeb/tp3/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/wajdigaiech/Desktop/M1 MIAGE/TechnosWeb/tp3/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/wajdigaiech/Desktop/M1 MIAGE/TechnosWeb/tp3/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wajdigaiech/Desktop/M1 MIAGE/TechnosWeb/tp3/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCnRhYmxlIHsKICBib3JkZXI6IDFweCBzb2xpZCBibGFjazsKICB3aWR0aDogMTAwJTsKICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwp9Cgp0ciwKdGQgewogIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOwp9Cgp0ZCB7CiAgcGFkZGluZzogNXB4Owp9Cgp0cjpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93Owp9CgppbnB1dDppbnZhbGlkIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiBwaW5rOwp9CgppbnB1dDp2YWxpZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRHcmVlbjsKfQoKLmJvcmR1cmVSb3VnZSB7CiAgYm9yZGVyOiAycHggZGFzaGVkIHJlZDsKfQo="},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h2>{{ msg }}</h2>\n    <form @submit=\"ajouterRestaurant(event)\">\n      <label>\n        Nom : <input name=\"nom\" type=\"text\" required v-model=\"nom\" />\n      </label>\n      <label>\n        Cuisine :\n        <input name=\"cuisine\" type=\"text\" required v-model=\"cuisine\" />\n      </label>\n\n      <button>Ajouter</button>\n    </form>\n\n    <h1>Nombre de restaurants : {{ nbRestaurantsTotal }}</h1>\n    <p>\n      chercher par nom :\n      <input\n        @input=\"chercherRestaurant()\"\n        type=\"text\"\n        v-model=\"nomRestaurantRechercher\"\n      />\n    </p>\n    <p>nb de page total: {{ nbpagetotal }}</p>\n    <button :disabled=\"page === 0\" @click=\"pagePrecedente()\">Précédent</button>\n    <button :disabled=\"page === nbpagetotal\" @click=\"pageSuivant()\">\n      Suivant\n    </button>\n    Page courante: {{ page }}\n    <p>\n      nombre de restaurants par page\n      <input\n        @input=\"getRestaurantsFromServer()\"\n        type=\"range\"\n        min=\"2\"\n        max=\"100\"\n        value=\"10\"\n        v-model=\"pageSize\"\n      />\n      {{ pageSize }}\n    </p>\n    <table>\n      <tr>\n        <th>Nom</th>\n        <th>Cuisine</th>\n      </tr>\n      <tbody>\n        <tr\n          v-for=\"(r, index) in restaurants\"\n          :key=\"r\"\n          @click=\"supprimerRestaurant(r)\"\n          v-bind:style=\"{ backgroundColor: getColor(index) }\"\n          v-bind:class=\"{ bordureRouge: index === 2 }\"\n        >\n          <td>{{ r.name }}</td>\n          <td>{{ r.cuisine }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"HelloWorld\",\n  data: () => ({\n    nom: \"\",\n    cuisine: \"\",\n    nbRestaurantsTotal: 0,\n    page: 0,\n    pageSize: 10,\n    nbpagetotal: 0,\n    nomRestaurantRechercher: \"\",\n    msg: \"\",\n    restaurants: [],\n  }),\n      methods: {\n         pagePrecedente() {\n                if (this.page === 0) return;\n                else {\n                    this.page--;\n                    this.getRestaurantsFromServer();\n                }\n\n            },\n            pageSuivant() {\n                if (this.page === this.nbpagetotal) return;\n                else {\n                    this.page++;\n                    this.getRestaurantsFromServer();\n                }\n\n            },\n           \n             getRestaurantsFromServer() {\n                // url (required), options (optional)\n                let url = \"http://localhost:8080/api/restaurants?\";\n                 url += \"page=\" + this.page;\n                url += \"&pagesize=\" + this.pageSize\n                url += \"&name=\" + this.nomRestaurantRechercher\n                fetch(url, {\n                    method: 'get'\n                }).then( (res) => {// arrow functions, conserve le bon \"this\"\n                    res.json().then((res) => {\n                        console.log(res.count)\n                        this.restaurants = res.data;\n                        this.nbRestaurantsTotal = res.count;\n                        this.nbpagetotal = Math.round(this.nbRestaurantsTotal / this.pageSize);\n                    })\n\n                }).catch( (err)=> {\n                    console.log(err)\n                });\n            },\n\n            ajouterRestaurant(event) {\n\n                event.preventDefault();\n\n                // Récupération du formulaire. Pas besoin de document.querySelector\n                // ou document.getElementById puisque c'est le formulaire qui a généré\n                // l'événement\n                let form = event.target;\n\n                // Récupération des valeurs des champs du formulaire\n                // en prévision d'un envoi multipart en ajax/fetch\n                let donneesFormulaire = new FormData(form);\n\n                let url = \"http://localhost:8080/api/restaurants\";\n\n                fetch(url, {\n                    method: \"POST\",\n                    body: donneesFormulaire\n                })\n                    .then((responseJSON) => {\n                        responseJSON.json()\n                            .then((res) => {\n                                // Maintenant res est un vrai objet JavaScript\n                                this.msg = res.msg;\n                            });\n                    })\n                    .catch(function (err) {\n                        console.log(err);\n                    });\n                this.nom = \"\";\n                this.cuisine = \"\";\n            },\n            getColor(index) {\n                return (index % 2) ? 'lightBlue' : 'pink';\n            }\n      },\n         mounted : function () {\n            // `this` points to the vm instance\n            console.log(\"AVANT RENDU HTML\")\n            this.getRestaurantsFromServer();\n        }\n        \n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\ntable {\n  border: 1px solid black;\n  width: 100%;\n  border-collapse: collapse;\n}\n\ntr,\ntd {\n  border: 1px solid black;\n}\n\ntd {\n  padding: 5px;\n}\n\ntr:hover {\n  background-color: yellow;\n}\n\ninput:invalid {\n  background-color: pink;\n}\n\ninput:valid {\n  background-color: lightGreen;\n}\n\n.bordureRouge {\n  border: 2px dashed red;\n}\n</style>\n"]}]}